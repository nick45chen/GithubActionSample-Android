name: Build
on:
  push:
    branches:
      - master
      - feature/upgrade_github_action_config #todo: test
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # checkout our repository under $GITHUB_WORKSPACE so the workflow can access it.
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # define the java version to 11.
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 11

      # Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # This action allows caching dependencies and build outputs to improve workflow execution time.
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: |
            ~/cache
            !~/cache/exclude
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      # run all unit tests
      - name: Run Tests
        run: ./gradlew test

#      - name: Build Project
#        run: ./gradlew assemble

      # build the project
#      - name: Build Debug APK
#        run: ./gradlew assembleDebug

      #Prepare Release
      - name: Prepare Release
        id: prepare_release
        run: |
          APK_PATH=`find . -name '*.apk' | grep release`
          echo ::set-output name=apk_path::$APK_PATH
          APK_NAME=`basename $APK_PATH`
          echo ::set-output name=apk_name::$APK_NAME
          BUNDLE_PATH=`find . -name '*.aab' | grep release | grep -v intermediates`
          echo ::set-output name=bundle_path::$BUNDLE_PATH
          BUNDLE_NAME=`basename $BUNDLE_PATH`
          echo ::set-output name=bundle_name::$BUNDLE_NAME
#        ÈÅ∏Áî®
#        TAG_NAME=`echo $GITHUB_REF | cut -d / -f3`
#        echo ::set-output name=tag_name::$TAG_NAME
#        PACKAGE_NAME=`./tools/aapt2 dump packagename $APK_PATH`
#        echo ::set-output name=package_name::$PACKAGE_NAME

      - name: Sign app APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

        # Example use of `signedReleaseFile` output -- not needed
      - name: ü§ñ Upload Bundle Asset
        uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: ü§ñ Upload apk
        uses: actions/upload-artifact@v2
        with:
          name: debug apk
          path: app/build/outputs/apk/debug/app-debug.apk