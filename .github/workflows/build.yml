name: Build
on:
  push:
    branches:
      - master
      - feature/upgrade_github_action_config #todo: test
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # checkout our repository under $GITHUB_WORKSPACE so the workflow can access it.
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # define the java version to 11.
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 11

      # Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # This action allows caching dependencies and build outputs to improve workflow execution time.
#      - name: Cache multiple paths
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/cache
#            !~/cache/exclude
#          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Cache Ruby dependencies
        uses: actions/cache@v3
        with:
          path: 'vendor/bundle'
          key: ${{ runner.os }}-gems-${{ secrets.GEMS_CACHE_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies to support ruby project
        run: |
          bundle config --global set deploy_platform_default x86_64-linux
          bundle install

      # run all unit tests
      - name: Run Tests
        run: ./gradlew test

#      - name: Build Project
#        run: ./gradlew assemble

      # build the project
#      - name: Build Debug APK
#        run: ./gradlew assembleDebug

      - name: Sign app APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

        # Example use of `signedReleaseFile` output -- not needed
      - name: ðŸ¤– Upload Bundle Asset
        uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: ðŸ¤– Upload apk
        uses: actions/upload-artifact@v2
        with:
          name: debug apk
          path: app/build/outputs/apk/debug/app-debug.apk