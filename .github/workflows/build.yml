name: Build
on:
  push:
    branches:
      - master
      - feature/upgrade_github_action_config #todo: test
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout The GitHub Repository
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Setup JDK 11
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 11

      # Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # [Optional] Setup Ruby (to run Fastlane project.)
#      - name: Setup ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: 2.7

      # Caching Environment Dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # run all unit tests
      - name: Run Tests
        run: ./gradlew test

      #      - name: Build Project
      #        run: ./gradlew assemble

      # build the project
      #      - name: Build Debug APK
      #        run: ./gradlew assembleDebug
      - name: Print new build number
        run: |
          echo "Build number is $BUILD_NUMBER"
          echo "Build number is $buildnumber" ${{ steps.buildnumber.outputs.build_number }}
          echo "Build number is $buildnumber_store" ${{ steps.buildnumber.outputs.buildnumber_store }}
          echo  $BUILD_NUMBER
      - uses: actions/checkout@v3
      - name: Envinfo
        run: npx envinfo
      - name: Build application
        run: |
          yarn install && cd android && chmod +x gradlew && ./gradlew build bundleRelease
          du -shc `find . -regex '.+\.\(apk\|aab\)$'`
        #      run: yarn install && cd android && chmod +x gradlew && ./gradlew assembleRelease


        #       ./gradlew build bundleRelease
        #         du -shc `find . -regex '.+\.\(apk\|aab\)$'`


      #Prepare Release
      - name: Prepare Release
        id: prepare_release
        #         if: contains(github.ref, 'tags/')
        run: |
          APK_PATH=`find . -name '*.apk' | grep release`
          echo ::set-output name=apk_path::$APK_PATH
          APK_NAME=`basename $APK_PATH`
          echo ::set-output name=apk_name::$APK_NAME
          BUNDLE_PATH=`find . -name '*.aab' | grep release | grep -v intermediates`
          echo ::set-output name=bundle_path::$BUNDLE_PATH
          BUNDLE_NAME=`basename $BUNDLE_PATH`
          echo ::set-output name=bundle_name::$BUNDLE_NAME
      #        ÈÅ∏Áî®
      #        TAG_NAME=`echo $GITHUB_REF | cut -d / -f3`
      #        echo ::set-output name=tag_name::$TAG_NAME
      #        PACKAGE_NAME=`./tools/aapt2 dump packagename $APK_PATH`
      #        echo ::set-output name=package_name::$PACKAGE_NAME
      - name: Print build PATH
        run: |
          echo ${{steps.prepare_release.outputs.bundle_path}}
          echo ${{steps.prepare_release.outputs.apk_name}}
          echo ${{steps.prepare_release.outputs.bundle_path}}/${{steps.prepare_release.outputs.apk_name}}

      - name: Sign app APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      #Uploads
      - name: Upload Apk Artifact
        if: steps.prepare_release.outputs.apk_path
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/
      #Uploads
      - name: Upload Bundle Artifact
        if: steps.prepare_release.outputs.bundle_path
        uses: actions/upload-artifact@v2
        with:
          name: app-release.aab
          path: android/app/build/outputs/bundle/release/

        # Example use of `signedReleaseFile` output -- not needed
#      - name: ü§ñ Upload Bundle Asset
#        uses: actions/upload-artifact@v2
#        with:
#          name: Signed app bundle
#          path: ${{steps.sign_app.outputs.signedReleaseFile}}

#      - name: ü§ñ Upload apk
#        uses: actions/upload-artifact@v2
#        with:
#          name: debug apk
#          path: app/build/outputs/apk/debug/app-debug.apk